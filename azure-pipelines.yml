name: 1.0.1$(Rev:.r)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: restore
  inputs:
    command: restore
    projects: '**/*.csproj'
    verbosityRestore: normal
    includeNuGetOrg: true

- task: VSBuild@1
  displayName: build
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Version=$(build.buildNumber) /p:GeneratePackageOnBuild=true'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    logFileVerbosity: minimal

- task: DotNetCoreCLI@2
  displayName: test
  inputs:
    command: test
    projects: 'test/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: 'push to project feed'
  inputs:
    command: 'push'
    searchPatternPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
    includesymbols: true
    includesource: true
    publishVstsFeed: 'Grillisoft.Configuration/configuration'

#  - task: NuGetCommand@2
#    displayName: 'NuGet push nuget.org feed'
#    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stable'))
#    inputs:
#      command: push
#      nuGetFeedType: external
#      publishFeedCredentials: nuget.org